// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "moniter.grpc";

package moniter;

// Computer status monitering service
service MoniterService {
  rpc current_memory_moniter_method(MemoryRequest) returns (MemoryReply) {}
  rpc current_cpu_usage_moniter_method(CpuMoniterRequest) returns (CpuMoniterReply) {}
  rpc current_disk_usage_moniter_method(DiskMoniterRequest) returns (DiskMoniterReply) {}
  rpc current_process_moniter_method(ProcessMoniterRequest) returns (ProcessMoniterReply) {}
  rpc selected_process_moniter_method(SelectedProcessMoniterRequest) returns (SelectedProcessMoniterReply) {}
  rpc log_monitoring_method(LogMonitorRequest) returns (LogMonitorReply) {}
}


// The request message contains virtual memory request, physical memory request
// available virtual memory request and available physical memory request
message MemoryRequest {
  string virtual_memory_request = 1;
  string physical_memory_request = 2;
  string avail_virtual_memory_request = 3;
  string avail_physical_memory_request = 4;
}

// The response message containing the information of memory system
message MemoryReply {
  string memory_info_reply = 1;
}

// The request message containing the client cpu order
message CpuMoniterRequest {
  string cpu_request = 1;
}

// The response message containing the information of cpu volume
message CpuMoniterReply {
  string cpu_reply = 1;
}

// The request contains total disk volume request, used disk volume request
// and available disk volume request
message DiskMoniterRequest{
  string total_disk_volume_request = 1;
  string disk_usage_request = 2;
  string avail_disk_volume_request = 3;
}

// The response message containing the information of disk
message DiskMoniterReply{
  string disk_info_reply = 1;
}


// The request message contains current process information reequest,
// current process's parent process information request, total process information request,
message ProcessMoniterRequest{
  string process_info_request = 1;
  string parent_process_info_request = 2;
  string all_process_info_request = 3;
}

// The reply message containing the information of process
message ProcessMoniterReply {
  string process_info_reply = 1;
}


// The request message contains process information request 
//that selected by client's input PID and client's input PID number
message SelectedProcessMoniterRequest{
  string pid_process_info_request = 1;
  string selected_process_name = 2;
}

//The reply message containing the information of selected process
message SelectedProcessMoniterReply{
  string selected_process_info_reply = 1;
}

// The request message contains client's log request 
message LogRequest{
  string log_request = 1;
}

//The reply message containing the log information
message LogReply{
  string log_reply = 1;
}